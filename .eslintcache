[{"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\index.tsx":"1","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\reportWebVitals.ts":"2","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\App.tsx":"3","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\store\\index.ts":"4","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\store\\console\\actions.ts":"5","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\store\\console\\reducer.ts":"6","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Console.tsx":"7","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Highlight.tsx":"8","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Error.tsx":"9","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Icon.tsx":"10","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\store\\command\\index.tsx":"11","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Help.tsx":"12"},{"size":613,"mtime":1608744015143,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":911,"mtime":1608768294032,"results":"17","hashOfConfig":"14"},{"size":510,"mtime":1608762938871,"results":"18","hashOfConfig":"14"},{"size":933,"mtime":1608859913255,"results":"19","hashOfConfig":"14"},{"size":2082,"mtime":1608860025578,"results":"20","hashOfConfig":"14"},{"size":3657,"mtime":1608862220095,"results":"21","hashOfConfig":"14"},{"size":261,"mtime":1608746088155,"results":"22","hashOfConfig":"14"},{"size":449,"mtime":1608858182306,"results":"23","hashOfConfig":"14"},{"size":872,"mtime":1608861785254,"results":"24","hashOfConfig":"14"},{"size":1809,"mtime":1608863525940,"results":"25","hashOfConfig":"14"},{"size":986,"mtime":1608863899197,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"mnj2v4",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"6yjhra",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\index.tsx",[],["54","55"],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\reportWebVitals.ts",[],["56","57"],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\App.tsx",[],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\store\\index.ts",[],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\store\\console\\actions.ts",[],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\store\\console\\reducer.ts",[],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Console.tsx",["58"],"import React, { useContext, useState, useEffect, useRef } from 'react'\r\nimport { AppContext } from './App' \r\nimport Icon from './Icon'\r\nimport styled from 'styled-components'\r\nimport { prevStatement, nextStatement } from '../store/console/actions'\r\nimport { execCommand } from '../store/command'\r\n\r\nfunction Status(props: {time: Date}) {\r\n  const t = props.time\r\n  const timestamp = [t.getUTCHours(), t.getUTCMinutes(), t.getUTCSeconds()].map((v: number) => {\r\n      const l = v.toString();\r\n      if (l.length === 1) {\r\n          return \"0\" + l;\r\n      }\r\n      return l;\r\n  }).join(':');\r\n  return <div>---- { timestamp }</div> \r\n}\r\n\r\nconst $Caret = styled.span`\r\n  width: 1.25em;\r\n`\r\n\r\nfunction Caret(props: {busy: boolean}) {\r\n  if (props.busy) {\r\n    return <$Caret><Icon id=\"spin\" /></$Caret>\r\n  }\r\n  return <$Caret>&gt;</$Caret>\r\n}\r\n\r\nconst $Input = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`\r\n\r\nconst $TextBox = styled.span`\r\n    appearance: none;\r\n    background: transparent;\r\n    border: none;\r\n    color: inherit;\r\n    outline: none;\r\n    overflow-wrap: anywhere;\r\n    flex-grow: 1;\r\n`\r\n\r\ninterface InputProps {\r\n  cmd: string\r\n  busy: boolean\r\n  onExec(cmd: string): any\r\n  onNext(): any\r\n  onPrev(): any\r\n}\r\n\r\nfunction Input(props: InputProps) {\r\n  \r\n  const textEl = useRef<HTMLSpanElement>(null)\r\n  useEffect(() => {\r\n    if (!props.busy && props.cmd === '' && textEl?.current?.innerHTML !== '') {\r\n      // clear text input\r\n      if (textEl?.current) {\r\n        textEl.current.innerHTML = ''\r\n      }\r\n    }\r\n\r\n    // auto-focus the text input\r\n    let interval = window.setInterval(() => {\r\n        if (document.activeElement !== textEl?.current) {\r\n            textEl?.current?.focus();\r\n        }\r\n    }, 300);\r\n    return () => window.clearInterval(interval);\r\n  });\r\n\r\n  // detect key events\r\n  const onKeydown = (e: React.KeyboardEvent<HTMLSpanElement>) => {\r\n    if (props.busy) {\r\n      return\r\n    }\r\n\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      props.onExec(textEl.current?.innerHTML || '')\r\n      if (textEl && textEl.current) {\r\n        // textEl.current.innerHTML = ''\r\n      }\r\n    } else if (e.key === 'ArrowUp') {\r\n      props.onPrev()\r\n    } else if (e.key === 'ArrowDown') {\r\n      props.onNext()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <$Input>\r\n      <Caret busy={ props.busy } />\r\n      <$TextBox ref={ textEl }\r\n                role=\"textbox\"\r\n                children={ props.cmd }\r\n                onKeyDown={ onKeydown }\r\n                spellCheck={ false }\r\n                contentEditable={ !props.busy }\r\n                suppressContentEditableWarning />\r\n    </$Input>\r\n  )\r\n}\r\n\r\nexport default function Console() {\r\n  const [state, dispatch] = useContext(AppContext)\r\n  const onExec = (input: string) => {\r\n    execCommand(dispatch, {time: state.consoleState.stmt.time, input})\r\n  }\r\n  const onPrev = () => {\r\n    dispatch(prevStatement())\r\n  }\r\n  const onNext = () => {\r\n    dispatch(nextStatement())\r\n  }\r\n\r\n  const results = state.consoleState.results.map((v, i) => {\r\n    return (\r\n      <React.Fragment key={ i }>\r\n        <Status time={ v.stmt.time } />\r\n        <$Input>\r\n          <Caret busy={ false } />\r\n          <$TextBox>{ v.stmt.input }</$TextBox>  \r\n        </$Input>\r\n        { v.output }\r\n      </React.Fragment>\r\n    )\r\n  })\r\n  \r\n  return (\r\n    <div>\r\n      { results }\r\n      <Status time={ state.consoleState.stmt.time } />\r\n      <Input cmd={ state.consoleState.stmt.input }\r\n             busy={ state.consoleState.busy }\r\n             onExec={ onExec }\r\n             onPrev={ onPrev }\r\n             onNext={ onNext } />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Highlight.tsx",[],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Error.tsx",[],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Icon.tsx",[],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\store\\command\\index.tsx",[],"C:\\Users\\acer\\Documents\\code\\arecibo\\src\\components\\Help.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":29,"nodeType":"67","messageId":"68","endLine":1,"endColumn":37},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]